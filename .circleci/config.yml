version: 2
jobs:
  build:
    working_directory: ~/tutorial-blockchain-elements
    docker:
      - image: microsoft/dotnet:2.1-sdk


    steps:
      # Build Process
      - checkout
      - attach_workspace:
          at: ~/tutorial-blockchain-elements
      - run:
          name: Install the Blockchain Elements Tutorial API's NuGet Dependencies
          command: dotnet restore --configfile ~/tutorial-blockchain-elements/NuGet.config
      - run:
          name: Build the Blockchain Tutorial Element API
          command: dotnet build
      - run:
          name: Execute Unit Tests
          command: |
            dotnet test test/Test.Unit.Core/ --no-restore --no-build -v n
            dotnet test test/Test.Unit.Infrastructure.Server/ --no-restore --no-build -v n
            dotnet test test/Test.Unit.Infrastructure.WebApi/ --no-restore --no-build -v n
      - run:
          name: Publish Build / Deployable Files
          command: dotnet publish  src/Infrastructure.WebApi/Infrastructure.WebApi.csproj -o ~/tutorial-blockchain-elements/publish
      - persist_to_workspace:
          root: .
          paths:
            - publish
            - test/Test.Integration*

  deploy_to_dockerhub:
    working_directory: ~/tutorial-blockchain-elements
    docker:
      - image: docker:17.05.0-ce-git

    steps:
      # Deployment Process
      - setup_remote_docker
      - checkout
      - attach_workspace:
          at: ~/tutorial-blockchain-elements

      # build and push Docker image
      - deploy:
          name: Deploy Image to Docker Hub
          command: |
            TAG=0.1.0_build_$CIRCLE_BUILD_NUM
            EXPOSED_PORT=80
            docker build --rm=false --no-cache -t walterpinson/tutorial-blockchain-elements .
            docker tag walterpinson/tutorial-blockchain-elements:latest walterpinson/tutorial-blockchain-elements:$TAG
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker push walterpinson/tutorial-blockchain-elements

workflows:
  version: 2

  build_only:
    jobs:
      - build:
          filters:
            branches:
              ignore:
                - master
                - dev

  # build_test:
  #   jobs:
  #     - build:
  #         filters:
  #           branches:
  #             ignore: master
  #     - test_integration:
  #         requires:
  #           - build

  # build_test_deploy:
  #   jobs:
  #     - build:
  #           filters:
  #               branches:
  #                 only:
  #                   - master
  #                   - dev
  #     - test_integration:
  #         requires:
  #           - build
  #     - deploy_to_dockerhub:
  #         requires:
  #           - build
  #           - test_integration

  build_deploy:
    jobs:
      - build:
          filters:
              branches:
                only: master
      - deploy_to_dockerhub:
          requires:
            - build